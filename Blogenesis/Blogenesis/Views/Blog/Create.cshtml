@model Blogenesis.DTO.CreateBlogDto
@{
    ViewData["Title"] = "Create Blog Post";
}

<!-- Include Quill.js CSS -->
<link href="https://cdn.quilljs.com/1.3.7/quill.snow.css" rel="stylesheet">

<div class="bg-white shadow-sm rounded-lg p-6 relative">
    <!-- Display success/error messages -->
    @if (ViewBag.SuccessMessage != null)
    {
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
            <span class="block sm:inline">@ViewBag.SuccessMessage</span>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
            <span class="block sm:inline">@TempData["ErrorMessage"]</span>
        </div>
    }

    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold text-gray-900">
            @if (ViewBag.EditMode == true)
            {
                @:Edit Blog Post
            }
            else
            {
                @:Create New Blog Post
            }
        </h1>
        <button type="button" id="openAiAssistant"
                class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg shadow-lg transition-colors duration-200">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
            </svg>
            <span>AI Assistant</span>
        </button>
    
    </div>

    @if (ViewBag.EditMode == true)
    {
        <form asp-controller="Blog" asp-action="Update" asp-route-id="@ViewBag.BlogId" method="post" id="createBlogForm">
            <input type="hidden" asp-for="IsPublished" id="isPublishedInput" value="@(ViewBag.IsPublished ?? true)" />
            <input type="hidden" asp-for="Content" id="hiddenContent" />
            <div class="space-y-6">
                <div>
                    <label asp-for="Title" class="block text-sm font-medium text-gray-700">Title</label>
                    <input asp-for="Title" type="text" id="title" required
                           value="@(ViewBag.GeneratedTitle ?? "")"
                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" />
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700">Content</label>
                    <div id="quill-editor" style="height: 300px;" class="mt-1"></div>
                </div>

                <div class="flex flex-row space-x-4">
                    <div class="flex-1">
                        <label asp-for="Subject" class="block text-sm font-medium text-gray-700">Subject</label>
                        <select asp-for="Subject" id="subject" required
                                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                            <option value="">Select a subject</option>
                            @{
                                var selectedSubject = ViewBag.GeneratedSubject?.ToString();
                            }
                            <option value="Technology" selected="@(selectedSubject == "Technology")">Technology</option>
                            <option value="Lifestyle" selected="@(selectedSubject == "Lifestyle")">Lifestyle</option>
                            <option value="Business" selected="@(selectedSubject == "Business")">Business</option>
                            <option value="Travel" selected="@(selectedSubject == "Travel")">Travel</option>
                            <option value="Health" selected="@(selectedSubject == "Health")">Health & Wellness</option>
                            <option value="Food" selected="@(selectedSubject == "Food")">Food & Cooking</option>
                            <option value="Education" selected="@(selectedSubject == "Education")">Education</option>
                            <option value="Entertainment" selected="@(selectedSubject == "Entertainment")">Entertainment</option>
                        </select>
                    </div>
                    <div class="flex-1">
                        <label asp-for="ReadTimeMinutes" class="block text-sm font-medium text-gray-700">Estimated Read Time</label>
                        <select asp-for="ReadTimeMinutes" id="readTimeMinutes" required
                                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                            <option value="">Select read time</option>
                            @{
                                var selectedReadTime = ViewBag.ReadTimeMinutes?.ToString();
                            }
                            <option value="1" selected="@(selectedReadTime == "1")">1 minute</option>
                            <option value="3" selected="@(selectedReadTime == "3")">3 minutes</option>
                            <option value="5" selected="@(selectedReadTime == "5")">5 minutes</option>
                            <option value="10" selected="@(selectedReadTime == "10")">10 minutes</option>
                            <option value="15" selected="@(selectedReadTime == "15")">15 minutes</option>
                            <option value="20" selected="@(selectedReadTime == "20")">20+ minutes</option>
                        </select>
                    </div>
                </div>

                <div class="flex justify-end space-x-4">
                    <button type="button" id="saveDraftBtn"
                            class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Save as Draft
                    </button>
                    <button type="submit" id="publishBtn"
                            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Update Post
                    </button>
                </div>
            </div>
        </form>
    }
    else
    {
        <form asp-controller="Blog" asp-action="Create" method="post" id="createBlogForm">
            <input type="hidden" asp-for="IsPublished" id="isPublishedInput" value="true" />
            <input type="hidden" asp-for="Content" id="hiddenContent" />
            <div class="space-y-6">
                <div>
                    <label asp-for="Title" class="block text-sm font-medium text-gray-700">Title</label>
                    <input asp-for="Title" type="text" id="title" required
                           value="@(ViewBag.GeneratedTitle ?? "")"
                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" />
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700">Content</label>
                    <div id="quill-editor" style="height: 300px;" class="mt-1"></div>
                </div>

                <div class="flex flex-row space-x-4">
                    <div class="flex-1">
                        <label asp-for="Subject" class="block text-sm font-medium text-gray-700">Subject</label>
                        <select asp-for="Subject" id="subject" required
                                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                            <option value="">Select a subject</option>
                            @{
                                var selectedSubject2 = ViewBag.GeneratedSubject?.ToString();
                            }
                            <option value="technology" selected="@(selectedSubject2 == "technology")">Technology</option>
                            <option value="lifestyle" selected="@(selectedSubject2 == "lifestyle")">Lifestyle</option>
                            <option value="business" selected="@(selectedSubject2 == "business")">Business</option>
                            <option value="travel" selected="@(selectedSubject2 == "travel")">Travel</option>
                            <option value="health" selected="@(selectedSubject2 == "health")">Health & Wellness</option>
                            <option value="food" selected="@(selectedSubject2 == "food")">Food & Cooking</option>
                            <option value="education" selected="@(selectedSubject2 == "education")">Education</option>
                            <option value="entertainment" selected="@(selectedSubject2 == "entertainment")">Entertainment</option>
                        </select>
                    </div>
                    <div class="flex-1">
                        <label asp-for="ReadTimeMinutes" class="block text-sm font-medium text-gray-700">Estimated Read Time</label>
                        <select asp-for="ReadTimeMinutes" id="readTimeMinutes" required
                                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                            <option value="">Select read time</option>
                            <option value="1">1 minute</option>
                            <option value="3">3 minutes</option>
                            <option value="5">5 minutes</option>
                            <option value="10">10 minutes</option>
                            <option value="15">15 minutes</option>
                            <option value="20">20+ minutes</option>
                        </select>
                    </div>
                </div>

                <div class="flex justify-end space-x-4">
                    <button type="button" id="saveDraftBtn"
                            class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Save as Draft
                    </button>
                    <button type="submit" id="publishBtn"
                            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Publish
                    </button>
                </div>
            </div>
        </form>
    }


<!-- AI Assistant Dialog -->
<div id="aiAssistantDialog" class="fixed inset-0 z-50 bg-gray-500 bg-opacity-75 hidden items-center justify-center">
    <div class="bg-white rounded-lg p-6 max-w-lg w-full mx-4 relative z-50 shadow-xl">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-lg font-semibold text-gray-900">AI Assistant</h2>
            <button type="button" id="closeAiAssistant" class="text-gray-400 hover:text-gray-500">
                <span class="sr-only">Close</span>
                <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>
        </div>
        
        <form asp-controller="Blog" asp-action="CreateBlogWithAi" method="post">
            <div class="space-y-4">
                <div>
                    <label for="Subject" class="block text-sm font-medium text-gray-700">Subject</label>
                    <select name="Subject" required
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                        <option value="">Select a subject</option>
                        <option value="technology">Technology</option>
                        <option value="lifestyle">Lifestyle</option>
                        <option value="business">Business</option>
                        <option value="travel">Travel</option>
                        <option value="health">Health & Wellness</option>
                        <option value="food">Food & Cooking</option>
                        <option value="education">Education</option>
                        <option value="entertainment">Entertainment</option>
                    </select>
                </div>

                <div>
                    <label for="Tone" class="block text-sm font-medium text-gray-700">Tone</label>
                    <select name="Tone" required
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                        <option value="">Select a tone</option>
                        <option value="professional">Professional</option>
                        <option value="casual">Casual</option>
                        <option value="friendly">Friendly</option>
                        <option value="formal">Formal</option>
                        <option value="conversational">Conversational</option>
                        <option value="authoritative">Authoritative</option>
                        <option value="humorous">Humorous</option>
                        <option value="inspirational">Inspirational</option>
                    </select>
                </div>

                <div>
                    <label for="Length" class="block text-sm font-medium text-gray-700">Length</label>
                    <select name="Length" required
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                        <option value="">Select length</option>
                        <option value="short">Short (~300 words)</option>
                        <option value="medium">Medium (~600 words)</option>
                        <option value="long">Long (~1000 words)</option>
                    </select>
                </div>

                <div class="flex justify-end mt-6">
                    <button type="submit"
                            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Generate Content
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <!-- Include Quill.js JavaScript -->
    <script src="https://cdn.quilljs.com/1.3.7/quill.min.js"></script>
    
    <script>
        // Initialize Quill editor
        var quill = new Quill('#quill-editor', {
            theme: 'snow',
            placeholder: 'Write your blog content here...',
            modules: {
                toolbar: [
                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                    ['bold', 'italic', 'underline', 'strike'],
                    ['blockquote', 'code-block'],
                    [{ 'list': 'ordered'}, { 'list': 'bullet' }],
                    [{ 'script': 'sub'}, { 'script': 'super' }],
                    [{ 'indent': '-1'}, { 'indent': '+1' }],
                    [{ 'direction': 'rtl' }],
                    [{ 'size': ['small', false, 'large', 'huge'] }],
                    [{ 'color': [] }, { 'background': [] }],
                    [{ 'font': [] }],
                    [{ 'align': [] }],
                    ['link', 'image', 'video'],
                    ['clean']
                ]
            }
        });

        // Load generated content if available
        @if (ViewBag.GeneratedContent != null)
        {
            <text>
            var generatedContent = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.GeneratedContent.ToString()));
            quill.root.innerHTML = generatedContent;
            </text>
        }

        // Update hidden input when form is submitted
        document.getElementById('createBlogForm').addEventListener('submit', function() {
            document.getElementById('hiddenContent').value = quill.root.innerHTML;
        });

        // AI Assistant Modal functionality
        const aiDialog = document.getElementById('aiAssistantDialog');
        const openAiButton = document.getElementById('openAiAssistant');
        const closeAiButton = document.getElementById('closeAiAssistant');

        openAiButton.addEventListener('click', () => {
            aiDialog.classList.remove('hidden');
            aiDialog.classList.add('flex');
        });

        closeAiButton.addEventListener('click', () => {
            aiDialog.classList.add('hidden');
            aiDialog.classList.remove('flex');
        });

        // Draft and Publish button functionality
        document.getElementById('saveDraftBtn').addEventListener('click', function() {
            document.getElementById('isPublishedInput').value = 'false';
            document.getElementById('hiddenContent').value = quill.root.innerHTML;
            document.getElementById('createBlogForm').submit();
        });
        
        document.getElementById('publishBtn').addEventListener('click', function() {
            document.getElementById('isPublishedInput').value = 'true';
            document.getElementById('hiddenContent').value = quill.root.innerHTML;
        });
    </script>
}
