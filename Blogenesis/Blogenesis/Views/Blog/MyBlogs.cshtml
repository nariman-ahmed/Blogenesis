@model List<BlogModel>

<div class="space-y-6">
    <!-- Display success message if exists -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative" role="alert">
            <span class="block sm:inline">@TempData["SuccessMessage"]</span>
        </div>
    }
    
    <div class="flex justify-between items-center mt-10">
        <div class="flex items-center gap-4">
            <!-- User Profile Picture -->
            <div class="relative">
                <img id="userProfilePic" 
                     src="@(!string.IsNullOrEmpty(ViewBag.CurrentUserProfilePic) ? Url.Content("~/" + ViewBag.CurrentUserProfilePic) : Url.Content("~/images/user-icon.png"))"
                     alt="User Profile" 
                     class="rounded-full border-2 border-gray-300 cursor-pointer hover:border-blue-500 transition-colors object-cover mr-10"
                     style="width: 60px !important; height: auto !important; margin-right:15px !important;"
                     onclick="openProfilePicModal()">
            </div>
            <h1 class="text-2xl font-bold text-gray-900">My Blog Posts</h1>
        </div>
        <a href="@Url.Action("Create", "Blog")" 
           class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700">
            Create New Post
        </a>
    </div>

    @if(Model.Count == 0){
        <div class="bg-white rounded-xl shadow-sm md:p-4 p-2 space-y-4 text-sm font-medium border1" style="width: 580px;">
            Currently, there are no posts available. Would you like to create the first one?
        </div>
    }

    @foreach(var blog in Model){
        <div class="bg-white shadow overflow-hidden sm:rounded-md hover:shadow-lg transition-shadow duration-200 cursor-pointer" 
             onclick="window.location.href='@Url.Action("Details", "Blog", new { id = blog.Id })'">
            <ul role="list" class="divide-y divide-gray-200">
                <li>
                    <div class="px-4 py-4 sm:px-6">
                        <div class="flex items-center justify-between">
                            <div class="flex-1 min-w-0">
                                <p class="text-lg font-medium text-blue-600 truncate hover:text-blue-800">
                                    @blog.Title
                                </p>
                                <div class="flex items-start gap-3 mt-3 mb-5">
                                    <div class="min-h-[2.5rem] w-1 bg-gray-300 rounded"></div>
                                    <div class="text-gray-700 text-sm line-clamp-3">
                                        @{
                                            // Remove HTML tags for preview and limit to first 200 characters
                                            var cleanContent = System.Text.RegularExpressions.Regex.Replace(blog.Content ?? "", "<.*?>", " ");
                                            var previewContent = cleanContent.Length > 200 ? cleanContent.Substring(0, 200) + "..." : cleanContent;
                                        }
                                        @previewContent
                                    </div>
                                </div>
                                <p class="text-sm text-gray-500 mb-1 mt-4">
                                    Published on @blog.DateCreated.ToString("MMMM dd, yyyy")
                                </p>
                            </div>
                            <div class="flex items-center space-x-4">
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border @(blog.IsPublished ? "bg-green-100 text-green-800 border-green-400" : "bg-red-100 text-red-800 border-pink-400")">
                                    @(blog.IsPublished ? "Published" : "Draft")
                                </span>
                                <div class="flex items-center space-x-2" onclick="event.stopPropagation()">
                                    <!-- edit button -->
                                    <a href="@Url.Action("Edit", "Blog", new { id = blog.Id })">
                                    <button class="text-gray-400 hover:text-blue-500 flex items-center justify-center">
                                        <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                        </svg>
                                    </button></a>
                                    <!-- delete button -->
                                    <button type="button" class="text-gray-400 hover:text-red-500 flex items-center justify-center" onclick="openBlogDeleteConfirmation(@blog.Id)">
                                        <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                        </svg>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </li>
            </ul>
        </div>
    }
</div>

<!-- Profile Picture Change Modal -->
<div id="profilePicModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-60 hidden">
    <div class="bg-white rounded-lg shadow-2xl p-6 w-full max-w-md relative">
        <h2 class="text-lg font-semibold mb-4 text-gray-900">Change Profile Picture</h2>
        <p class="mb-4 text-gray-700">Choose a new profile picture (PNG or JPEG only):</p>
        
        <form id="profilePicForm" method="post" action="@Url.Action("EditUserPic", "Account")" enctype="multipart/form-data">
            <div class="mb-4">
                <input type="file" 
                       name="NewProfilePic" 
                       id="profilePicInput"
                       accept=".png,.jpg,.jpeg,image/png,image/jpeg"
                       class="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100"
                       required />
                <p class="mt-1 text-xs text-gray-500">Only PNG and JPEG files are allowed.</p>
            </div>
            
            <!-- Preview area -->
            <div id="imagePreview" class="mb-4 hidden">
                <p class="text-sm text-gray-700 mb-2">Preview:</p>
                <img id="previewImg" src="#" alt="Preview" class="w-20 h-20 rounded-full border-2 border-gray-300 object-cover">
            </div>
            
            <div class="flex justify-end space-x-3">
                <button type="button" onclick="closeProfilePicModal()" class="px-4 py-2 rounded bg-gray-200 text-gray-700 hover:bg-gray-300 font-semibold">Cancel</button>
                <button type="submit" class="px-4 py-2 rounded bg-blue-600 text-white hover:bg-blue-700 font-semibold shadow">Upload</button>
            </div>
        </form>
    </div>
</div>

<!-- Blog Delete Confirmation Modal -->
<div id="blogDeleteModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-60 hidden">
    <div class="bg-white rounded-lg shadow-2xl p-6 w-full max-w-md relative">
        <h2 class="text-lg font-semibold mb-4 text-gray-900">Delete Blog Post</h2>
        <p class="mb-6 text-gray-700">Are you sure you want to delete this blog post? This action cannot be undone.</p>
        <form id="deleteBlogForm" method="post" action="@Url.Action("DeleteBlog", "Blog")">
            <input type="hidden" name="BlogId" id="deleteConfirmationBlogId" value="" />
            <div class="flex justify-end space-x-3">
                <button type="button" onclick="closeBlogDeleteConfirmation()" class="px-4 py-2 rounded bg-gray-200 text-gray-700 hover:bg-gray-300 font-semibold">Cancel</button>
                <button type="submit" class="px-4 py-2 rounded bg-red-600 text-white hover:bg-red-700 font-semibold shadow">Delete</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
<script>
    // Profile Picture Modal Functions
    function openProfilePicModal() {
        document.getElementById('profilePicModal').classList.remove('hidden');
    }
    
    function closeProfilePicModal() {
        document.getElementById('profilePicModal').classList.add('hidden');
        // Reset form
        document.getElementById('profilePicForm').reset();
        document.getElementById('imagePreview').classList.add('hidden');
    }
    
    // Image preview functionality
    document.getElementById('profilePicInput').addEventListener('change', function(e) {
        const file = e.target.files[0];
        if (file) {
            // Validate file type
            const allowedTypes = ['image/png', 'image/jpeg', 'image/jpg'];
            if (!allowedTypes.includes(file.type)) {
                alert('Please select only PNG or JPEG images.');
                e.target.value = '';
                return;
            }
            
            // Show preview
            const reader = new FileReader();
            reader.onload = function(e) {
                document.getElementById('previewImg').src = e.target.result;
                document.getElementById('imagePreview').classList.remove('hidden');
            };
            reader.readAsDataURL(file);
        } else {
            document.getElementById('imagePreview').classList.add('hidden');
        }
    });
    
    // Close profile pic modal on outside click
    document.getElementById('profilePicModal').addEventListener('click', function(e) {
        if (e.target === this) closeProfilePicModal();
    });

    // Blog Delete Modal Functions
    function openBlogDeleteConfirmation(blogId) {
        document.getElementById('deleteConfirmationBlogId').value = blogId;
        document.getElementById('blogDeleteModal').classList.remove('hidden');
    }
    function closeBlogDeleteConfirmation() {
        document.getElementById('blogDeleteModal').classList.add('hidden');
    }
    // Optional: Close modal on outside click
    document.getElementById('blogDeleteModal').addEventListener('click', function(e) {
        if (e.target === this) closeBlogDeleteConfirmation();
    });
</script>
}
